-- NOTE: To manually execute this script you must 
-- replace {databaseOwner} and {objectQualifier} with real values. 
-- Defaults is ".dbo" for database owner and "" for object qualifier 

-- Create tables

IF NOT EXISTS (select * from sys.objects where object_id = object_id(N'{databaseOwner}[{objectQualifier}Documents_Documents]') and type in (N'U'))
	BEGIN
		CREATE TABLE {databaseOwner}[{objectQualifier}Documents_Documents]
		(
			[ItemID] [int] NOT NULL IDENTITY(0, 1),
			[ModuleID] [int] NOT NULL,
			[CreatedDate] [datetime] NULL,
			[URL] [nvarchar] (250) NULL,
			[Title] [nvarchar] (150) NULL,
			[Category] [nvarchar] (50) NULL,
			[CreatedByUserID] INT NULL, 
			[OwnedByUserID] INT NULL, 
			[ModifiedByUserID] INT NULL, 
			[ModifiedDate] datetime NULL, 
			[SortOrderIndex] INT NULL, 
			[Description] nvarchar (255) NULL,
			[ForceDownload] BIT,
			[IsPublished] BIT NOT NULL
		)

		ALTER TABLE {databaseOwner}[{objectQualifier}Documents_Documents] ADD CONSTRAINT [PK_{objectQualifier}Documents_Documents] PRIMARY KEY NONCLUSTERED  ([ItemID])
		CREATE CLUSTERED INDEX [IX_{objectQualifier}Documents_Documents] ON {databaseOwner}[{objectQualifier}Documents_Documents] ([ModuleID])

		ALTER TABLE {databaseOwner}[{objectQualifier}Documents_Documents] WITH NOCHECK ADD
		CONSTRAINT [FK_{objectQualifier}Documents_Documents_{objectQualifier}Modules] FOREIGN KEY ([ModuleID]) REFERENCES {databaseOwner}[{objectQualifier}Modules] ([ModuleID]) ON DELETE CASCADE
	END
GO

-- Drop stored procedures 

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = object_id(N'{databaseOwner}{objectQualifier}Documents_GetDocument') and type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}Documents_GetDocument
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = object_id(N'{databaseOwner}{objectQualifier}Documents_GetDocuments') and type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}Documents_GetDocuments
GO

-- Create stored procedures

CREATE PROCEDURE {databaseOwner}{objectQualifier}Documents_GetDocument
	@ItemId   INT,
	@ModuleId INT
AS
SELECT D.Itemid,
       D.Moduleid,
       D.Title,
       D.Url,
       D.Category,
       CreatedByUser.DisplayName AS "CreatedByUser",
       OwnedByUser.DisplayName AS "OwnedByUser",
       ModifiedByUser.DisplayName AS "ModifiedByUser",       
       F.Size,
       F.ContentType,
       UT.TrackClicks,
       UT.Clicks,
       UT.NewWindow,
       D.OwnedByUserID, 
       D.ModifiedByUserID, 
       D.ModifiedDate,
       D.CreatedByUserID, 
       D.CreatedDate, 
       D.SortOrderIndex,
       D.Description,
	   D.ForceDownload,
	   D.IsPublished
FROM {databaseOwner}{objectQualifier}Documents_Documents AS D
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users AS CreatedByUser on D.CreatedByUserID = CreatedByUser.UserId 
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users AS OwnedByUser on D.OwnedByUserID = OwnedByUser.UserId
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users AS ModifiedByUser on D.ModifiedByUserID = ModifiedByUser.UserId
LEFT OUTER JOIN {databaseOwner}{objectQualifier}UrlTracking AS UT on D.URL = UT.Url and UT.ModuleId = @ModuleID
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Files AS F on D.URL = 'fileid=' + convert(varchar,F.FileID)
WHERE D.ItemId = @ItemId and D.ModuleId = @ModuleId

GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Documents_GetDocuments
	@ModuleId INT,
	@PortalId INT
AS
SELECT D.ItemId,
       D.Moduleid,
       D.Title,
       D.Url,
       CreatedByUser.DisplayName AS "CreatedByUser",
       OwnedByUser.DisplayName AS "OwnedByUser",
       ModifiedByUser.DisplayName AS "ModifiedByUser",       
       D.Category,
       F.Size,
       UT.TrackClicks,
       UT.Clicks,
       UT.NewWindow,
       D.OwnedByUserID, 
       D.ModifiedByUserID, 
       D.ModifiedDate,
       D.CreatedByUserID, 
       D.CreatedDate, 
       D.SortOrderIndex,
       D.Description,
	   D.ForceDownload,
	   D.IsPublished
FROM {databaseOwner}{objectQualifier}Documents_Documents AS D
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users AS CreatedByUser on D.CreatedByUserID = CreatedByUser.UserId 
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users AS OwnedByUser on D.OwnedByUserID = OwnedByUser.UserId
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users AS ModifiedByUser on D.ModifiedByUserID = ModifiedByUser.UserId
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Files AS F on D.URL = 'fileid=' + convert(varchar, F.FileID)
LEFT OUTER JOIN {databaseOwner}{objectQualifier}UrlTracking AS UT on D.URL = UT.Url and UT.ModuleId = @ModuleID
WHERE D.ModuleId = @ModuleId 
ORDER by D.Title
GO
